substitutions:
  name: "soil-sensor-2"
  friendly_name: "Soil Sensor 2"
  interval: 15s
  deep_sleep_run_duration: 10s
  deep_sleep_sleep_duration: 1h

esphome:
  name: ${name}
  friendly_name: ${friendly_name}
  min_version: 2024.6.0
  name_add_mac_suffix: false
  project:
    name: esphome.web
    version: dev
  on_boot:
    then:
      - switch.turn_on: sensor_power
  on_shutdown:
      then:
      - switch.turn_off: sensor_power
  

esp32:
  board: esp32-c3-devkitm-1
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

# Allow provisioning Wi-Fi via serial
improv_serial:

wifi:
  # Set up a wifi access point
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  fast_connect: True
  manual_ip:
    static_ip: 192.168.4.118
    gateway: 192.168.4.1
    subnet: 255.255.255.0

# In combination with the `ap` this allows the user
# to provision wifi credentials to the device via WiFi AP.
captive_portal:

dashboard_import:
  package_import_url: github://esphome/firmware/esphome-web/esp32c3.yaml@main
  import_full_config: true

# Sets up Bluetooth LE (Only on ESP32) to allow the user
# to provision wifi credentials to the device.
esp32_improv:
  authorizer: none

# To have a "next url" for improv serial
web_server:

sensor:
  - platform: adc
    pin: 
      number: GPIO2
      allow_other_uses: true
    name: "Soil Moisture"
    unit_of_measurement: "%"
    device_class: MOISTURE
    update_interval: ${interval}
    attenuation: 12db      
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1
      - calibrate_linear:
        - 1.00 ->  100.00 
        - 2.40 ->  0.00
      - lambda: |
          if (x < 0) return 0; 
          else if (x > 100) return 100;
          else return (x);
    accuracy_decimals: 0
 
  - platform: adc
    pin: 
      number: GPIO2
      allow_other_uses: true
    name: "Soil Sensor Voltage"
    update_interval: ${interval}
    attenuation: 12db #required
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1

  - platform: wifi_signal
    name: "WiFi Signal"
    update_interval: ${interval}
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"
    entity_category: "diagnostic"
  
  - platform: adc
    pin:
      number: GPIO4
      allow_other_uses: true
    name: "Battery Life"
    unit_of_measurement: "%"
    device_class: BATTERY
    update_interval: ${interval}
    attenuation: 12db #required
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1
      - multiply: 2.0
      - calibrate_linear:
        - 3.6 ->  100.00 
        - 3.0 ->  0.00
      # - calibrate_polynomial: #set your own values here
      #     degree: 4
      #     datapoints:
      #     - 3.0 ->  10
      #     - 3.1 ->  20
      #     - 3.2 ->  30
      #     - 3.3 ->  50
      #     - 3.4 ->  60
      #     - 3.5 ->  75
      #     - 3.6 ->  90
      #     - 3.7 ->  100
      - lambda: |
          if (x < 0) return 0; 
          else if (x > 100) return 100;
          else return (x);
    accuracy_decimals: 0
        
  - platform: adc
    pin: 
      number: GPIO4
      allow_other_uses: true
    name: "Battery Voltage"
    update_interval: ${interval}
    attenuation: 12db #required
    filters:
      - median:
          window_size: 5
          send_every: 1
          send_first_at: 1
      - multiply: 2.0
 
switch:
  - platform: gpio
    pin: GPIO3
    id: sensor_power
    internal: true

deep_sleep:
  id: deep_sleep_1
  run_duration: ${deep_sleep_run_duration}
  sleep_duration: ${deep_sleep_sleep_duration}
  
# use to keep sensors awake or start sleep
# can be done by sensor name or all sensors

mqtt:
  broker: 192.168.4.109
  username: !secret mqtt_username
  password: !secret mqtt_password
  on_message:
    - topic: ${name}/wake-mode
      payload: 'ON'
      then:
        - deep_sleep.prevent: deep_sleep_1
    - topic: ${name}/wake-mode
      payload: 'OFF'
      then:
        - deep_sleep.enter: deep_sleep_1
    - topic: all_soil_sensors/wake-mode
      payload: 'ON'
      then:
        - deep_sleep.prevent: deep_sleep_1
    - topic: all_soil_sensors/wake-mode
      payload: 'OFF'
      then:
        - deep_sleep.enter: deep_sleep_1
